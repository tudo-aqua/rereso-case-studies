#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2023-2025 The ReReSo Authors, see AUTHORS.md
#
# SPDX-License-Identifier: Apache-2.0

set -euxo pipefail

if [ "$#" -lt 1 ]; then
  echo "Usage: run-rereso-dumux-benchmark BENCHMARK [OUTPUT]" >&2
  exit 1
fi
benchmark="$1"

if [ "$#" -lt 2 ]; then
  output_dir="$PWD"
else
  output_dir="$2"
fi

benchmark_dir="$(mktemp -d --tmpdir rereso-dumux-benchmark.XXXXXXXXXX)"
tar -C "$benchmark_dir" -xvf "$benchmark"

if [ -e "$benchmark_dir/dune.patch" ]; then
  echo "Benchmark contains a Dune patch. This is not portable and requires a writable container!"
  (
    pushd "/dune"
    patch -p1 < "$benchmark_dir/dune.patch"
  )
fi

benchmark_module="$(jq -r .module "$benchmark_dir/benchmark.json")"
benchmark_target="$(jq -r .target "$benchmark_dir/benchmark.json")"
benchmark_workdir="$(jq -r '."working-directory"' "$benchmark_dir/benchmark.json")"

benchmark_command=("$(jq -r .command "$benchmark_dir/benchmark.json")")
while read -d '' -r item; do
  benchmark_command+=("$item")
done < <(jq --raw-output0 .arguments[] "$benchmark_dir/benchmark.json")

(
  pushd "$benchmark_dir/$benchmark_module"
  dunecontrol --only="$benchmark_module" --opts="/dune/modules/dumux/cmake.opts" all
  dunecontrol --only="$benchmark_module" --opts="/dune/modules/dumux/cmake.opts" make "$benchmark_target"
  (
    pushd "build-cmake/$benchmark_workdir"
    "./${benchmark_command[0]}" "${benchmark_command[@]:1}"
  )
)

mkdir -p "$output_dir"

output_files=()
while read -d '' -r item; do
  output_files+=("$benchmark_dir/$benchmark_module/build-cmake/$benchmark_workdir/$item")
done < <(jq --raw-output0 .comparisons[].generated "$benchmark_dir/benchmark.json")

cp -v "${output_files[@]}" "$output_dir"

rm -rf "$benchmark_dir"
